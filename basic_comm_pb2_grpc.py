# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import basic_comm_pb2 as basic__comm__pb2


class DataCommStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFeatures = channel.unary_unary(
        '/DataComm/GetFeatures',
        request_serializer=basic__comm__pb2.Empty.SerializeToString,
        response_deserializer=basic__comm__pb2.Feature.FromString,
        )


class DataCommServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetFeatures(self, request, context):
    """(Method definitions not shown)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DataCommServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeatures,
          request_deserializer=basic__comm__pb2.Empty.FromString,
          response_serializer=basic__comm__pb2.Feature.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'DataComm', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
